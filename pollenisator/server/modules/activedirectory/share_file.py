# coding: utf-8

from __future__ import absolute_import
from pollenisator.server.servermodels.element import ServerElement

class ShareFile(ServerElement):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """
    coll_name = "sharefiles"
    name = "ShareFile"
    
    def __init__(self, valuesFromDb=None):
        if valuesFromDb is None:
            valuesFromDb = {}
        self.initialize(valuesFromDb.get("path"), valuesFromDb.get("flagged"), valuesFromDb.get("size") , valuesFromDb.get("users"), valuesFromDb.get("infos") )

    def initialize(self, path=None, flagged=None, size=None,  users=None, infos=None): 
        self.path = path
        self.flagged = flagged
        self.size = size
        self.users = users if users is not None else []
        self.infos =  infos if infos is not None else {}
        return self

    def getData(self):
        return {"flagged": self.flagged, "path":self.path, "size":self.size,
                 "users":self.users, "infos":self.infos}

    def add_user(self, domain, user, priv):
        users = set(self.users)
        users.add((domain, user, priv))
        self.users = list(users)
    
    @classmethod
    def getTriggers(cls):
        """
        Return the list of trigger declared here
        """
        return []

    def __str__(self):
        """
        Get a string representation of a defect.

        Returns:
            Returns the defect +title.
        """
        return self.path
    
    @classmethod
    def getSearchableTextAttribute(cls):
        return ["path"]
