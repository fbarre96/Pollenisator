paths:
  "/files/{pentest}/upload/{filetype}/{attached_to}":
    post:
      operationId: pollenisator.server.modules.filemanager.filemanager.upload
      tags:
        - FileManager
      summary: Upload a new file (file will be renamed if already exists)
      parameters:
        - name: pentest
          in: path
          description: pentest name
          required: true
          schema:
            type: string
        - name: attached_to
          in: path
          description: file will be tied to given defect id (if defect is deleted, so is this file)
          required: true
          schema:
            type: string
        - name: filetype
          in: path
          required: true
          schema:
            type: string
            enum:
              - result
              - proof
              - file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upfile:
                  description: The file to upload
                  type: string
                  format: binary
              required:
                - upfile
      responses:
        "200":
          description: Successfully uploaded file
          content:
            application/json:
              examples:
                Successful:
                  value: '{"msg":"{filename} was successfully uploaded", "attachment_id":"uuid-v4"}'
        "404":
          description: defect not found
          content:
            application/json:
              examples:
                Unknown defect:
                  value: '"The given iid does not match an existing defect"'
  "/files/{pentest}/edit/{filetype}/{attached_to}/{attachment_id}":
    post:
      operationId: pollenisator.server.modules.filemanager.filemanager.upload_replace
      tags:
        - FileManager
      summary: Upload a file and replace existing one
      parameters:
        - name: pentest
          in: path
          description: pentest name
          required: true
          schema:
            type: string
        - name: filetype
          in: path
          required: true
          schema:
            type: string
            enum:
              - result
              - proof
              - file
        - name: attached_to
          in: path
          description: file will be tied to given defect id (if defect is deleted, so is this file)
          required: true
          schema:
            type: string
        - name: attachment_id
          in: path
          description: file to replace
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upfile:
                  description: The file to upload
                  type: string
                  format: binary
              required:
                - upfile
      responses:
        "200":
          description: Successfully uploaded file
          content:
            application/json:
              examples:
                Successful:
                  value: '{"msg":"{filename} was successfully uploaded", "attachment_id":"uuid-v4"}'
        "404":
          description: defect not found
          content:
            application/json:
              examples:
                Unknown defect:
                  value: '"The given iid does not match an existing defect"'
  "/files/{pentest}/list/{filetype}/{attached_to}":
    get:
      operationId: pollenisator.server.modules.filemanager.filemanager.listFiles
      tags:
        - FileManager
      summary: Lists attached to given iid
      parameters:
        - name: pentest
          in: path
          description: pentest name
          required: true
          schema:
            type: string
        - name: attached_to
          in: path
          description: file will be tied to given iid
          required: true
          schema:
            type: string
        - name: filetype
          in: path
          required: true
          schema:
            type: string
            enum:
              - result
              - proof
              - file
      responses:
        "200":
          description: Successfully listed files
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  "/files/{pentest}/download/{filetype}/{attached_to}":
    get:
      operationId: pollenisator.server.modules.filemanager.filemanager.download
      tags:
        - FileManager
      summary: Download a file
      parameters:
        - name: pentest
          in: path
          description: pentest name
          required: true
          schema:
            type: string
        - name: attached_to
          in: path
          description: file will be tied to given iid
          required: true
          schema:
            type: string
        - name: filetype
          in: path
          required: true
          schema:
            type: string
            enum:
              - result
              - proof
              - file
        - name: filename
          in: query
          required: false
          schema:
            type: string
            default: ""

      responses:
        "200":
          description: Successfully downloaded file
          content:
            application/octet-steam:
              schema:
                type: string
                format: binary
                
        "404":
          description: File not found
          content:
            application/json:
              examples:
                file not found:
                  value: '"File not found"'
  "/files/{pentest}/{filetype}/{attached_to}/{filename}":
    delete:
      operationId: pollenisator.server.modules.filemanager.filemanager.rmFile
      tags:
        - FileManager
      summary: Remove a proof file
      parameters:
        - name: pentest
          in: path
          description: pentest name
          required: true
          schema:
            type: string
        - name: attached_to
          in: path
          description: defect iid which have the file to delete
          required: true
          schema:
            type: string
        - name: filetype
          in: path
          required: true
          schema:
            type: string
            enum:
              - result
              - proof
              - file
        - name: filename
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully deleted the file
          content:
            application/json:
              examples:
                Successful:
                  value: '"Successfully deleted {filename}"'
        "404":
          description: File not found
          content:
            application/json:
              examples:
                file not found:
                  value: '"File not found"'

  "/files/{pentest}/import":
    post:
      operationId: pollenisator.server.modules.filemanager.filemanager.importExistingFile
      tags:
        - FileManager
      summary: Import an existing tool file
      parameters:
        - name: pentest
          in: path
          description: pentest name
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upfile:
                  description: The file to upload
                  type: string
                  format: binary
                plugin:
                  description: plugin name to use or auto-detect
                  type: string
                  default: "auto-detect"
                default_target:
                  description: Default pentest object to affect to
                  type: string
                  default: ""
                cmdline:
                  description: command line used if knowingly
                  type: string
                  default: ""
              required:
                - upfile
                - plugin
      responses:
        "200":
          description: Successfully imported file
          content:
            application/json:
              examples:
                successful import of nmap file:
                  value: '{
                    "Nmap.py": 1
                    }'